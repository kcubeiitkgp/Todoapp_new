{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaust\\\\Desktop\\\\todolist\\\\todo-app\\\\src\\\\Components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\n// TodoForm.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = _ref => {\n  _s();\n  let {\n    addTodo\n  } = _ref;\n  const [inputValue, setInputValue] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [isAddTaskChecked, setIsAddTaskChecked] = useState(true);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleDateChange = e => {\n    setDueDate(e.target.value);\n  };\n  const handleAddTaskCheckboxChange = () => {\n    setIsAddTaskChecked(!isAddTaskChecked);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim() !== \"\") {\n      if (dueDate && dueDate !== \"dd/mm/yyyy\") {\n        addTodo(inputValue, dueDate);\n        setInputValue(\"\");\n        setDueDate(\"\");\n      } else {\n        alert(\"Please provide a valid due date.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"New Todo\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dueDate,\n          onChange: handleDateChange,\n          className: \"date-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-task-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isAddTaskChecked,\n          onChange: handleAddTaskCheckboxChange,\n          className: \"add-task-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-button\",\n          disabled: !isAddTaskChecked,\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"4d/V69IGG1kuehYQRUlhfuAiWsI=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","_ref","_s","addTodo","inputValue","setInputValue","dueDate","setDueDate","isAddTaskChecked","setIsAddTaskChecked","handleInputChange","e","target","value","handleDateChange","handleAddTaskCheckboxChange","handleSubmit","preventDefault","trim","alert","onSubmit","children","className","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","checked","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kaust/Desktop/todolist/todo-app/src/Components/TodoForm.js"],"sourcesContent":["// TodoForm.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst TodoForm = ({ addTodo }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [isAddTaskChecked, setIsAddTaskChecked] = useState(true);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDueDate(e.target.value);\r\n  };\r\n\r\n  const handleAddTaskCheckboxChange = () => {\r\n    setIsAddTaskChecked(!isAddTaskChecked);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() !== \"\") {\r\n      if (dueDate && dueDate !== \"dd/mm/yyyy\") {\r\n        addTodo(inputValue, dueDate);\r\n        setInputValue(\"\");\r\n        setDueDate(\"\");\r\n      } else {\r\n        alert(\"Please provide a valid due date.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          placeholder=\"New Todo\"\r\n          className=\"input-field\"\r\n        />\r\n        <div className=\"input-row\">\r\n          <input\r\n            type=\"date\"\r\n            value={dueDate}\r\n            onChange={handleDateChange}\r\n            className=\"date-field\"\r\n          />\r\n        </div>\r\n        <div className=\"add-task-container\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isAddTaskChecked}\r\n            onChange={handleAddTaskCheckboxChange}\r\n            className=\"add-task-checkbox\"\r\n          />\r\n          <button type=\"submit\" className=\"add-button\" disabled={!isAddTaskChecked}>\r\n            Add new task\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}