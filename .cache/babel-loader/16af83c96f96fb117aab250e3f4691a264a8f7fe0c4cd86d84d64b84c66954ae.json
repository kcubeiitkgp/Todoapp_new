{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaust\\\\Desktop\\\\todolist\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [updatedTaskText, setUpdatedTaskText] = useState(\"\");\n  const [updatedDueDate, setUpdatedDueDate] = useState(\"\");\n  useEffect(() => {\n    // Fetch todos from API or local storage\n    // For example:\n    axios.get(\"/api/todos\").then(response => {\n      setTodos(response.data);\n    });\n  }, []);\n  const addTodo = (text, dueDate) => {\n    const newTodo = {\n      id: Date.now(),\n      text,\n      completed: false,\n      due_date: dueDate\n    };\n    setTodos([...todos, newTodo]);\n  };\n  const removeTodo = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  const toggleComplete = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const updateDueDate = (id, newDate) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          due_date: newDate\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const handleEdit = id => {\n    setEditTaskId(id);\n    const todoToEdit = todos.find(todo => todo.id === id);\n    if (todoToEdit) {\n      setUpdatedTaskText(todoToEdit.text);\n      setUpdatedDueDate(todoToEdit.due_date);\n    }\n  };\n  const handleTaskUpdate = (e, id) => {\n    setUpdatedTaskText(e.target.value);\n  };\n  const handleDueDateUpdate = (e, id) => {\n    setUpdatedDueDate(e.target.value);\n  };\n  const handleUpdate = () => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === editTaskId) {\n        return {\n          ...todo,\n          text: updatedTaskText,\n          due_date: updatedDueDate\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setEditTaskId(null);\n    setUpdatedTaskText(\"\");\n    setUpdatedDueDate(\"\");\n  };\n  const handleCancelEdit = () => {\n    setEditTaskId(null);\n    setUpdatedTaskText(\"\");\n    setUpdatedDueDate(\"\");\n  };\n  const handleFilterChange = status => {\n    setFilter(status);\n  };\n\n  // Apply filter based on status\n  const filteredTodos = filter === \"all\" ? todos : todos.filter(todo => todo.completed === (filter === \"completed\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo,\n      setFilter: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: filteredTodos,\n      toggleComplete: toggleComplete,\n      removeTodo: removeTodo,\n      updateDueDate: updateDueDate,\n      handleEdit: handleEdit,\n      editTaskId: editTaskId,\n      updatedTaskText: updatedTaskText,\n      updatedDueDate: updatedDueDate,\n      handleTaskUpdate: handleTaskUpdate,\n      handleDueDateUpdate: handleDueDateUpdate,\n      handleUpdate: handleUpdate,\n      handleCancelEdit: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4vXWwEeOxYUhL+VqACdj9zZWHWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","filter","setFilter","editTaskId","setEditTaskId","updatedTaskText","setUpdatedTaskText","updatedDueDate","setUpdatedDueDate","get","then","response","data","addTodo","text","dueDate","newTodo","id","Date","now","completed","due_date","removeTodo","updatedTodos","todo","toggleComplete","map","updateDueDate","newDate","handleEdit","todoToEdit","find","handleTaskUpdate","e","target","value","handleDueDateUpdate","handleUpdate","handleCancelEdit","handleFilterChange","status","filteredTodos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaust/Desktop/todolist/todo-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [updatedTaskText, setUpdatedTaskText] = useState(\"\");\n  const [updatedDueDate, setUpdatedDueDate] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch todos from API or local storage\n    // For example:\n    axios.get(\"/api/todos\").then((response) => {\n      setTodos(response.data);\n    });\n  }, []);\n\n  const addTodo = (text, dueDate) => {\n    const newTodo = {\n      id: Date.now(),\n      text,\n      completed: false,\n      due_date: dueDate,\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const removeTodo = (id) => {\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const toggleComplete = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const updateDueDate = (id, newDate) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, due_date: newDate };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const handleEdit = (id) => {\n    setEditTaskId(id);\n    const todoToEdit = todos.find((todo) => todo.id === id);\n    if (todoToEdit) {\n      setUpdatedTaskText(todoToEdit.text);\n      setUpdatedDueDate(todoToEdit.due_date);\n    }\n  };\n\n  const handleTaskUpdate = (e, id) => {\n    setUpdatedTaskText(e.target.value);\n  };\n\n  const handleDueDateUpdate = (e, id) => {\n    setUpdatedDueDate(e.target.value);\n  };\n\n  const handleUpdate = () => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === editTaskId) {\n        return {\n          ...todo,\n          text: updatedTaskText,\n          due_date: updatedDueDate,\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setEditTaskId(null);\n    setUpdatedTaskText(\"\");\n    setUpdatedDueDate(\"\");\n  };\n\n  const handleCancelEdit = () => {\n    setEditTaskId(null);\n    setUpdatedTaskText(\"\");\n    setUpdatedDueDate(\"\");\n  };\n\n  const handleFilterChange = (status) => {\n    setFilter(status);\n  };\n\n  // Apply filter based on status\n  const filteredTodos = filter === \"all\" ? todos : todos.filter((todo) => todo.completed === (filter === \"completed\"));\n\n  return (\n    <div className=\"container\">\n      <TodoForm addTodo={addTodo} setFilter={handleFilterChange} />\n      <TodoList\n        todos={filteredTodos}\n        toggleComplete={toggleComplete}\n        removeTodo={removeTodo}\n        updateDueDate={updateDueDate}\n        handleEdit={handleEdit}\n        editTaskId={editTaskId}\n        updatedTaskText={updatedTaskText}\n        updatedDueDate={updatedDueDate}\n        handleTaskUpdate={handleTaskUpdate}\n        handleDueDateUpdate={handleDueDateUpdate}\n        handleUpdate={handleUpdate}\n        handleCancelEdit={handleCancelEdit}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA;IACAC,KAAK,CAACiB,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACzCX,QAAQ,CAACW,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACjC,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdL,IAAI;MACJM,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAEN;IACZ,CAAC;IACDf,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEiB,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMM,UAAU,GAAIL,EAAE,IAAK;IACzB,MAAMM,YAAY,GAAGxB,KAAK,CAACE,MAAM,CAAEuB,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC;IAC3DjB,QAAQ,CAACuB,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,cAAc,GAAIR,EAAE,IAAK;IAC7B,MAAMM,YAAY,GAAGxB,KAAK,CAAC2B,GAAG,CAAEF,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGO,IAAI;UAAEJ,SAAS,EAAE,CAACI,IAAI,CAACJ;QAAU,CAAC;MAChD;MACA,OAAOI,IAAI;IACb,CAAC,CAAC;IACFxB,QAAQ,CAACuB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMI,aAAa,GAAGA,CAACV,EAAE,EAAEW,OAAO,KAAK;IACrC,MAAML,YAAY,GAAGxB,KAAK,CAAC2B,GAAG,CAAEF,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACP,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGO,IAAI;UAAEH,QAAQ,EAAEO;QAAQ,CAAC;MACvC;MACA,OAAOJ,IAAI;IACb,CAAC,CAAC;IACFxB,QAAQ,CAACuB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMM,UAAU,GAAIZ,EAAE,IAAK;IACzBb,aAAa,CAACa,EAAE,CAAC;IACjB,MAAMa,UAAU,GAAG/B,KAAK,CAACgC,IAAI,CAAEP,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC;IACvD,IAAIa,UAAU,EAAE;MACdxB,kBAAkB,CAACwB,UAAU,CAAChB,IAAI,CAAC;MACnCN,iBAAiB,CAACsB,UAAU,CAACT,QAAQ,CAAC;IACxC;EACF,CAAC;EAED,MAAMW,gBAAgB,GAAGA,CAACC,CAAC,EAAEhB,EAAE,KAAK;IAClCX,kBAAkB,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACH,CAAC,EAAEhB,EAAE,KAAK;IACrCT,iBAAiB,CAACyB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMd,YAAY,GAAGxB,KAAK,CAAC2B,GAAG,CAAEF,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACP,EAAE,KAAKd,UAAU,EAAE;QAC1B,OAAO;UACL,GAAGqB,IAAI;UACPV,IAAI,EAAET,eAAe;UACrBgB,QAAQ,EAAEd;QACZ,CAAC;MACH;MACA,OAAOiB,IAAI;IACb,CAAC,CAAC;IACFxB,QAAQ,CAACuB,YAAY,CAAC;IACtBnB,aAAa,CAAC,IAAI,CAAC;IACnBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAM8B,gBAAgB,GAAGA,CAAA,KAAM;IAC7BlC,aAAa,CAAC,IAAI,CAAC;IACnBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAM+B,kBAAkB,GAAIC,MAAM,IAAK;IACrCtC,SAAS,CAACsC,MAAM,CAAC;EACnB,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGxC,MAAM,KAAK,KAAK,GAAGF,KAAK,GAAGA,KAAK,CAACE,MAAM,CAAEuB,IAAI,IAAKA,IAAI,CAACJ,SAAS,MAAMnB,MAAM,KAAK,WAAW,CAAC,CAAC;EAEpH,oBACEL,OAAA;IAAK8C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB/C,OAAA,CAACH,QAAQ;MAACoB,OAAO,EAAEA,OAAQ;MAACX,SAAS,EAAEqC;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DnD,OAAA,CAACF,QAAQ;MACPK,KAAK,EAAE0C,aAAc;MACrBhB,cAAc,EAAEA,cAAe;MAC/BH,UAAU,EAAEA,UAAW;MACvBK,aAAa,EAAEA,aAAc;MAC7BE,UAAU,EAAEA,UAAW;MACvB1B,UAAU,EAAEA,UAAW;MACvBE,eAAe,EAAEA,eAAgB;MACjCE,cAAc,EAAEA,cAAe;MAC/ByB,gBAAgB,EAAEA,gBAAiB;MACnCI,mBAAmB,EAAEA,mBAAoB;MACzCC,YAAY,EAAEA,YAAa;MAC3BC,gBAAgB,EAAEA;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjD,EAAA,CApHID,GAAG;AAAAmD,EAAA,GAAHnD,GAAG;AAsHT,eAAeA,GAAG;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}