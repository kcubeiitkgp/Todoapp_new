{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaust\\\\Desktop\\\\todolist\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [updatedTaskText, setUpdatedTaskText] = useState(\"\");\n  const [updatedDueDate, setUpdatedDueDate] = useState(\"\");\n  useEffect(() => {\n    axios.get('http://localhost:5000/todos').then(response => {\n      setTodos(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const addTodo = (text, dueDate) => {\n    const newTodo = {\n      id: Date.now(),\n      text,\n      completed: false,\n      due_date: dueDate\n    };\n    axios.post('http://localhost:5000/todos', newTodo).then(response => {\n      setTodos([...todos, newTodo]);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const removeTodo = id => {\n    axios.delete(`http://localhost:5000/todos/${id}`).then(response => {\n      const updatedTodos = todos.filter(todo => todo.id !== id);\n      setTodos(updatedTodos);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const toggleComplete = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        axios.put(`http://localhost:5000/todos/${id}`, updatedTodo).then(response => {\n          return updatedTodo;\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const updateDueDate = (id, newDate) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        const updatedTodo = {\n          ...todo,\n          due_date: newDate\n        };\n        axios.put(`http://localhost:5000/todos/${id}`, updatedTodo).then(response => {\n          return updatedTodo;\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const handleEdit = id => {\n    setEditTaskId(id);\n    const todo = todos.find(todo => todo.id === id);\n    setUpdatedTaskText(todo ? todo.text : \"\");\n    setUpdatedDueDate(todo ? todo.due_date : \"\");\n  };\n  const handleTaskUpdate = e => {\n    setUpdatedTaskText(e.target.value);\n  };\n  const handleDueDateUpdate = e => {\n    setUpdatedDueDate(e.target.value);\n  };\n  const handleTaskUpdateSubmit = () => {\n    if (editTaskId) {\n      const updatedTodos = todos.map(todo => {\n        if (todo.id === editTaskId) {\n          return {\n            ...todo,\n            text: updatedTaskText,\n            due_date: updatedDueDate\n          };\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      setEditTaskId(null);\n      setUpdatedTaskText(\"\");\n      setUpdatedDueDate(\"\");\n    }\n  };\n  const handleFilterChange = status => {\n    setFilter(status);\n  };\n  const filteredTodos = filter === \"all\" ? todos : todos.filter(todo => todo.completed === (filter === \"completed\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo,\n      setFilter: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: filteredTodos,\n      toggleComplete: toggleComplete,\n      removeTodo: removeTodo,\n      updateDueDate: updateDueDate,\n      handleEdit: handleEdit,\n      editTaskId: editTaskId,\n      updatedTaskText: updatedTaskText,\n      updatedDueDate: updatedDueDate,\n      handleTaskUpdate: handleTaskUpdate,\n      handleDueDateUpdate: handleDueDateUpdate,\n      handleTaskUpdateSubmit: handleTaskUpdateSubmit,\n      setEditTaskId: setEditTaskId,\n      setUpdatedTaskText: setUpdatedTaskText,\n      setUpdatedDueDate: setUpdatedDueDate,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4vXWwEeOxYUhL+VqACdj9zZWHWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","filter","setFilter","editTaskId","setEditTaskId","updatedTaskText","setUpdatedTaskText","updatedDueDate","setUpdatedDueDate","get","then","response","data","catch","error","console","addTodo","text","dueDate","newTodo","id","Date","now","completed","due_date","post","removeTodo","delete","updatedTodos","todo","toggleComplete","map","updatedTodo","put","updateDueDate","newDate","handleEdit","find","handleTaskUpdate","e","target","value","handleDueDateUpdate","handleTaskUpdateSubmit","handleFilterChange","status","filteredTodos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaust/Desktop/todolist/todo-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\nimport './App.css';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [updatedTaskText, setUpdatedTaskText] = useState(\"\");\n  const [updatedDueDate, setUpdatedDueDate] = useState(\"\");\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/todos')\n      .then(response => {\n        setTodos(response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  const addTodo = (text, dueDate) => {\n    const newTodo = {\n      id: Date.now(),\n      text,\n      completed: false,\n      due_date: dueDate\n    };\n    axios.post('http://localhost:5000/todos', newTodo)\n      .then(response => {\n        setTodos([...todos, newTodo]);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const removeTodo = (id) => {\n    axios.delete(`http://localhost:5000/todos/${id}`)\n      .then(response => {\n        const updatedTodos = todos.filter((todo) => todo.id !== id);\n        setTodos(updatedTodos);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const toggleComplete = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        axios.put(`http://localhost:5000/todos/${id}`, updatedTodo)\n          .then(response => {\n            return updatedTodo;\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const updateDueDate = (id, newDate) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        const updatedTodo = { ...todo, due_date: newDate };\n        axios.put(`http://localhost:5000/todos/${id}`, updatedTodo)\n          .then(response => {\n            return updatedTodo;\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const handleEdit = (id) => {\n    setEditTaskId(id);\n    const todo = todos.find((todo) => todo.id === id);\n    setUpdatedTaskText(todo ? todo.text : \"\");\n    setUpdatedDueDate(todo ? todo.due_date : \"\");\n  };\n\n  const handleTaskUpdate = (e) => {\n    setUpdatedTaskText(e.target.value);\n  };\n\n  const handleDueDateUpdate = (e) => {\n    setUpdatedDueDate(e.target.value);\n  };\n\n  const handleTaskUpdateSubmit = () => {\n    if (editTaskId) {\n      const updatedTodos = todos.map((todo) => {\n        if (todo.id === editTaskId) {\n          return { ...todo, text: updatedTaskText, due_date: updatedDueDate };\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      setEditTaskId(null);\n      setUpdatedTaskText(\"\");\n      setUpdatedDueDate(\"\");\n    }\n  };\n\n  const handleFilterChange = (status) => {\n    setFilter(status);\n  };\n\n  const filteredTodos = filter === \"all\"\n    ? todos\n    : todos.filter(todo => todo.completed === (filter === \"completed\"));\n\n  return (\n    <div className=\"container\">\n      <TodoForm addTodo={addTodo} setFilter={handleFilterChange} />\n      <TodoList\n        todos={filteredTodos}\n        toggleComplete={toggleComplete}\n        removeTodo={removeTodo}\n        updateDueDate={updateDueDate}\n        handleEdit={handleEdit}\n        editTaskId={editTaskId}\n        updatedTaskText={updatedTaskText}\n        updatedDueDate={updatedDueDate}\n        handleTaskUpdate={handleTaskUpdate}\n        handleDueDateUpdate={handleDueDateUpdate}\n        handleTaskUpdateSubmit={handleTaskUpdateSubmit}\n        setEditTaskId={setEditTaskId}\n        setUpdatedTaskText={setUpdatedTaskText}\n        setUpdatedDueDate={setUpdatedDueDate}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}