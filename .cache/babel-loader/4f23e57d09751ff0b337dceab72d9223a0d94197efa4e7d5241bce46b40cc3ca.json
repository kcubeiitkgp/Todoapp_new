{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaust\\\\Desktop\\\\todolist\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [updatedTaskText, setUpdatedTaskText] = useState(\"\");\n  const [updatedDueDate, setUpdatedDueDate] = useState(\"\");\n\n  // Fetch todos from the server\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/todos\");\n        setTodos(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const addTodo = async (text, dueDate) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/todos\", {\n        text,\n        completed: false,\n        due_date: dueDate\n      });\n      const newTodo = response.data;\n      setTodos([...todos, newTodo]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const removeTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/todos/${id}`);\n      const updatedTodos = todos.filter(todo => todo.id !== id);\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const toggleComplete = async id => {\n    try {\n      const todoToUpdate = todos.find(todo => todo.id === id);\n      const updatedTodo = {\n        ...todoToUpdate,\n        completed: !todoToUpdate.completed\n      };\n      await axios.put(`http://localhost:5000/todos/${id}`, updatedTodo);\n      const updatedTodos = todos.map(todo => {\n        if (todo.id === id) {\n          return updatedTodo;\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateDueDate = async (id, newDate) => {\n    try {\n      const todoToUpdate = todos.find(todo => todo.id === id);\n      const updatedTodo = {\n        ...todoToUpdate,\n        due_date: newDate\n      };\n      await axios.put(`http://localhost:5000/todos/${id}`, updatedTodo);\n      const updatedTodos = todos.map(todo => {\n        if (todo.id === id) {\n          return updatedTodo;\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleEdit = id => {\n    setEditTaskId(id);\n    const todo = todos.find(todo => todo.id === id);\n    setUpdatedTaskText(todo ? todo.text : \"\");\n    setUpdatedDueDate(todo ? todo.due_date : \"\");\n  };\n  const handleTaskUpdate = e => {\n    setUpdatedTaskText(e.target.value);\n  };\n  const handleDueDateUpdate = e => {\n    setUpdatedDueDate(e.target.value);\n  };\n  const handleTaskUpdateSubmit = async () => {\n    if (editTaskId) {\n      try {\n        const todoToUpdate = todos.find(todo => todo.id === editTaskId);\n        const updatedTodo = {\n          ...todoToUpdate,\n          text: updatedTaskText,\n          due_date: updatedDueDate\n        };\n        await axios.put(`http://localhost:5000/todos/${editTaskId}`, updatedTodo);\n        const updatedTodos = todos.map(todo => {\n          if (todo.id === editTaskId) {\n            return updatedTodo;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n        setEditTaskId(null);\n        setUpdatedTaskText(\"\");\n        setUpdatedDueDate(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  const handleFilterChange = status => {\n    setFilter(status);\n  };\n\n  // Apply filter based on status\n  const filteredTodos = filter === \"all\" ? todos : todos.filter(todo => todo.completed === (filter === \"completed\"));\n\n  // Get the current date\n  const currentDate = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo,\n      setFilter: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: filteredTodos,\n      toggleComplete: toggleComplete,\n      removeTodo: removeTodo,\n      updateDueDate: updateDueDate,\n      handleEdit: handleEdit,\n      editTaskId: editTaskId,\n      updatedTaskText: updatedTaskText,\n      updatedDueDate: updatedDueDate,\n      handleTaskUpdate: handleTaskUpdate,\n      handleDueDateUpdate: handleDueDateUpdate,\n      handleTaskUpdateSubmit: handleTaskUpdateSubmit,\n      setEditTaskId: setEditTaskId,\n      setUpdatedTaskText: setUpdatedTaskText,\n      setUpdatedDueDate: setUpdatedDueDate,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4vXWwEeOxYUhL+VqACdj9zZWHWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","filter","setFilter","editTaskId","setEditTaskId","updatedTaskText","setUpdatedTaskText","updatedDueDate","setUpdatedDueDate","fetchData","response","get","data","error","console","log","addTodo","text","dueDate","post","completed","due_date","newTodo","removeTodo","id","delete","updatedTodos","todo","toggleComplete","todoToUpdate","find","updatedTodo","put","map","updateDueDate","newDate","handleEdit","handleTaskUpdate","e","target","value","handleDueDateUpdate","handleTaskUpdateSubmit","handleFilterChange","status","filteredTodos","currentDate","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaust/Desktop/todolist/todo-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\nimport './App.css';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [updatedTaskText, setUpdatedTaskText] = useState(\"\");\n  const [updatedDueDate, setUpdatedDueDate] = useState(\"\");\n\n  // Fetch todos from the server\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/todos\");\n        setTodos(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const addTodo = async (text, dueDate) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/todos\", {\n        text,\n        completed: false,\n        due_date: dueDate\n      });\n      const newTodo = response.data;\n      setTodos([...todos, newTodo]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeTodo = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/todos/${id}`);\n      const updatedTodos = todos.filter((todo) => todo.id !== id);\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const toggleComplete = async (id) => {\n    try {\n      const todoToUpdate = todos.find((todo) => todo.id === id);\n      const updatedTodo = {\n        ...todoToUpdate,\n        completed: !todoToUpdate.completed\n      };\n      await axios.put(`http://localhost:5000/todos/${id}`, updatedTodo);\n      const updatedTodos = todos.map((todo) => {\n        if (todo.id === id) {\n          return updatedTodo;\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateDueDate = async (id, newDate) => {\n    try {\n      const todoToUpdate = todos.find((todo) => todo.id === id);\n      const updatedTodo = {\n        ...todoToUpdate,\n        due_date: newDate\n      };\n      await axios.put(`http://localhost:5000/todos/${id}`, updatedTodo);\n      const updatedTodos = todos.map((todo) => {\n        if (todo.id === id) {\n          return updatedTodo;\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = (id) => {\n    setEditTaskId(id);\n    const todo = todos.find((todo) => todo.id === id);\n    setUpdatedTaskText(todo ? todo.text : \"\");\n    setUpdatedDueDate(todo ? todo.due_date : \"\");\n  };\n\n  const handleTaskUpdate = (e) => {\n    setUpdatedTaskText(e.target.value);\n  };\n\n  const handleDueDateUpdate = (e) => {\n    setUpdatedDueDate(e.target.value);\n  };\n\n  const handleTaskUpdateSubmit = async () => {\n    if (editTaskId) {\n      try {\n        const todoToUpdate = todos.find((todo) => todo.id === editTaskId);\n        const updatedTodo = {\n          ...todoToUpdate,\n          text: updatedTaskText,\n          due_date: updatedDueDate\n        };\n        await axios.put(\n          `http://localhost:5000/todos/${editTaskId}`,\n          updatedTodo\n        );\n        const updatedTodos = todos.map((todo) => {\n          if (todo.id === editTaskId) {\n            return updatedTodo;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n        setEditTaskId(null);\n        setUpdatedTaskText(\"\");\n        setUpdatedDueDate(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleFilterChange = (status) => {\n    setFilter(status);\n  };\n\n  // Apply filter based on status\n  const filteredTodos = filter === \"all\"\n    ? todos\n    : todos.filter(todo => todo.completed === (filter === \"completed\"));\n\n  // Get the current date\n  const currentDate = new Date();\n\n  return (\n    <div className=\"container\">\n      <TodoForm addTodo={addTodo} setFilter={handleFilterChange} />\n      <TodoList\n        todos={filteredTodos}\n        toggleComplete={toggleComplete}\n        removeTodo={removeTodo}\n        updateDueDate={updateDueDate}\n        handleEdit={handleEdit}\n        editTaskId={editTaskId}\n        updatedTaskText={updatedTaskText}\n        updatedDueDate={updatedDueDate}\n        handleTaskUpdate={handleTaskUpdate}\n        handleDueDateUpdate={handleDueDateUpdate}\n        handleTaskUpdateSubmit={handleTaskUpdateSubmit}\n        setEditTaskId={setEditTaskId}\n        setUpdatedTaskText={setUpdatedTaskText}\n        setUpdatedDueDate={setUpdatedDueDate}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}