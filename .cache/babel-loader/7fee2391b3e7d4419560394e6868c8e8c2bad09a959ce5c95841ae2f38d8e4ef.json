{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaust\\\\Desktop\\\\todolist\\\\todo-app\\\\src\\\\Components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  _s();\n  let {\n    todos,\n    toggleComplete,\n    removeTodo,\n    updateDueDate,\n    handleEdit,\n    editTaskId,\n    updatedTaskText,\n    updatedDueDate,\n    handleTaskUpdate,\n    handleDueDateUpdate,\n    handleTaskUpdateSubmit\n  } = _ref;\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [originalTaskText, setOriginalTaskText] = useState(\"\");\n  const [originalDueDate, setOriginalDueDate] = useState(\"\");\n  const openEditPopup = id => {\n    const todo = todos.find(todo => todo.id === id);\n    handleEdit(id);\n    setOriginalTaskText(todo.text);\n    setOriginalDueDate(todo.due_date);\n    setShowEditPopup(true);\n  };\n  const closeEditPopup = () => {\n    setShowEditPopup(false);\n    setUpdatedTaskText(originalTaskText);\n    setUpdatedDueDate(originalDueDate);\n    handleEdit(null);\n  };\n  const handleUpdateTask = () => {\n    handleTaskUpdateSubmit();\n    setShowEditPopup(false);\n    handleEdit(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: todo.editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"edit-task-input\",\n            value: updatedTaskText,\n            onChange: handleTaskUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"edit-date-input\",\n            value: updatedDueDate,\n            onChange: handleDueDateUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-button\",\n            onClick: handleUpdateTask,\n            children: \"Update Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: closeEditPopup,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo-text ${todo.completed ? \"completed\" : \"\"}`,\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => toggleComplete(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => openEditPopup(todo.id, todo.text, todo.due_date),\n          disabled: showEditPopup || todo.editing,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => removeTodo(todo.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"fdJ8yTo0iiweLWWOGI6fnpyFR8E=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_ref","_s","todos","toggleComplete","removeTodo","updateDueDate","handleEdit","editTaskId","updatedTaskText","updatedDueDate","handleTaskUpdate","handleDueDateUpdate","handleTaskUpdateSubmit","showEditPopup","setShowEditPopup","originalTaskText","setOriginalTaskText","originalDueDate","setOriginalDueDate","openEditPopup","id","todo","find","text","due_date","closeEditPopup","setUpdatedTaskText","setUpdatedDueDate","handleUpdateTask","className","children","map","editing","type","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","completed","checked","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kaust/Desktop/todolist/todo-app/src/Components/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  toggleComplete,\r\n  removeTodo,\r\n  updateDueDate,\r\n  handleEdit,\r\n  editTaskId,\r\n  updatedTaskText,\r\n  updatedDueDate,\r\n  handleTaskUpdate,\r\n  handleDueDateUpdate,\r\n  handleTaskUpdateSubmit,\r\n}) => {\r\n  const [showEditPopup, setShowEditPopup] = useState(false);\r\n  const [originalTaskText, setOriginalTaskText] = useState(\"\");\r\n  const [originalDueDate, setOriginalDueDate] = useState(\"\");\r\n\r\n  const openEditPopup = (id) => {\r\n    const todo = todos.find((todo) => todo.id === id);\r\n    handleEdit(id);\r\n    setOriginalTaskText(todo.text);\r\n    setOriginalDueDate(todo.due_date);\r\n    setShowEditPopup(true);\r\n  };\r\n\r\n  const closeEditPopup = () => {\r\n    setShowEditPopup(false);\r\n    setUpdatedTaskText(originalTaskText);\r\n    setUpdatedDueDate(originalDueDate);\r\n    handleEdit(null);\r\n  };\r\n\r\n  const handleUpdateTask = () => {\r\n    handleTaskUpdateSubmit();\r\n    setShowEditPopup(false);\r\n    handleEdit(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {todos.map((todo) => (\r\n        <div className=\"todo-item\" key={todo.id}>\r\n          <div className=\"task-container\">\r\n            {todo.editing ? (\r\n              <div className=\"edit-popup\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"edit-task-input\"\r\n                  value={updatedTaskText}\r\n                  onChange={handleTaskUpdate}\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"edit-date-input\"\r\n                  value={updatedDueDate}\r\n                  onChange={handleDueDateUpdate}\r\n                />\r\n                <button className=\"update-button\" onClick={handleUpdateTask}>\r\n                  Update Task\r\n                </button>\r\n                <button className=\"cancel-button\" onClick={closeEditPopup}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className={`todo-text ${todo.completed ? \"completed\" : \"\"}`}>\r\n                {todo.text}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={todo.completed}\r\n              onChange={() => toggleComplete(todo.id)}\r\n            />\r\n            <button\r\n              className=\"edit-button\"\r\n              onClick={() => openEditPopup(todo.id, todo.text, todo.due_date)}\r\n              disabled={showEditPopup || todo.editing}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button className=\"remove-button\" onClick={() => removeTodo(todo.id)}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}